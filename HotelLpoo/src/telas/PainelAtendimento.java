package telas;

import Quartos.*;
import gravacao.GravarArquivo;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import usuario.*;

public class PainelAtendimento extends javax.swing.JFrame {

    /**
     * Creates new form PainelAtendimento
     * @param user
     * @param room
     */
    
    public PainelAtendimento(ListaUsuario user, ListaQuarto room) {
        this.listaUsuario = user;
        this.listaQuarto = room;
        this.quartoDisponivel = this.listaQuarto.buscarDisponiveis();
        this.quartoOcupado = this.listaQuarto.buscarOcupados();
        this.quartoReservado = this.listaQuarto.buscarReservados();
        this.nomeUsuario = this.listaUsuario.nomeUser();
        this.valor = 0;
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JButton();
        botaoCheckIn = new javax.swing.JButton();
        botaoCheckOut = new javax.swing.JButton();
        botaoReserva = new javax.swing.JButton();
        labelDisponiveis = new javax.swing.JLabel();
        selectDisponiveis = new javax.swing.JComboBox<>();
        labelOcupados = new javax.swing.JLabel();
        selectOcupado = new javax.swing.JComboBox<>();
        labelReservado = new javax.swing.JLabel();
        selectReservado = new javax.swing.JComboBox<>();
        labelUsuario = new javax.swing.JLabel();
        selectUsuario = new javax.swing.JComboBox<>();
        checkReserva = new javax.swing.JCheckBox();
        msgErro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Bem vindo ao painel de atendimento");

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        botaoCheckIn.setText("Fazer Check-in");
        botaoCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCheckInActionPerformed(evt);
            }
        });

        botaoCheckOut.setText("Fazer Check-out");
        botaoCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCheckOutActionPerformed(evt);
            }
        });

        botaoReserva.setText("Reservar um quarto");
        botaoReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoReservaActionPerformed(evt);
            }
        });

        labelDisponiveis.setText("QuartosDisponiveis");

        selectDisponiveis.setModel(new DefaultComboBoxModel(this.quartoDisponivel));

        labelOcupados.setText("Quartos Ocupados");

        selectOcupado.setModel(new DefaultComboBoxModel(this.quartoOcupado));

        labelReservado.setText("Quartos Reservados");

        selectReservado.setModel(new DefaultComboBoxModel(this.quartoReservado));

        labelUsuario.setText("Usuarios Cadastrados");

        selectUsuario.setModel(new DefaultComboBoxModel(this.nomeUsuario));

        checkReserva.setText("Usuario reservou Quarto?");

        msgErro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        msgErro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelOcupados, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(selectOcupado, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(selectDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botaoCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(msgErro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelReservado, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(selectReservado, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(botaoReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(selectUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(checkReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botaoVoltar)
                        .addGap(31, 31, 31)
                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoVoltar)
                    .addComponent(titulo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoCheckIn))
                    .addComponent(labelDisponiveis, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectOcupado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoCheckOut))
                    .addComponent(labelOcupados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelReservado)
                    .addComponent(selectReservado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoReserva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(selectUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkReserva))
                .addGap(18, 18, 18)
                .addComponent(msgErro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCheckInActionPerformed
        
        //checa se a caixa de quarto ja foi reservado foi marcada
        if(this.checkReserva.isSelected()){
            //transforma o conteudo dos dropdown em texto
            String quartoSelecionado = this.selectReservado.getSelectedItem().toString();
            //busca o quarto a partir do nome escolhido
            Quarto selecao = this.listaQuarto.getQuarto(this.listaQuarto.busca(quartoSelecionado));
            
            //confere se o quarto esta reservado para aquele usuario que esta fazendo checkin
            if (selecao.getUsuario().getNome().equalsIgnoreCase(this.selectUsuario.getSelectedItem().toString()) && selecao.isReservado()){
                
                //confere se o quarto esta limpo para receber um hospede
                if (selecao.checkin()){
                    GravarArquivo gravar;
                    try {
                        gravar = new GravarArquivo("quartos.txt");
                        gravar.grava(this.listaQuarto.toString());
                        gravar.fecha();
                        this.dispose();
                        new RespostaAtendimento("CheckIn feito com sucesso", this.selectReservado.getSelectedItem().toString(), 
                                this.selectUsuario.getSelectedItem().toString(), valor).setVisible(true);
                    } catch (IOException ex) {
                        this.msgErro.setText("Não foi possível salvar");
                        this.msgErro.setVisible(true);
                    }
                } else {
                    this.msgErro.setText("Quarto nao esta pronto para uso");
                }
            } else {
                this.msgErro.setText("Quarto reservado para outro usuário");
            }
            
        //caso a caixa de selecao esteja desmarcada executa o codigo abaixo 
        } else {
            Usuario user = this.listaUsuario.getUsuario(this.selectUsuario.getSelectedItem().toString());
            String quartoSelecionado = this.selectDisponiveis.getSelectedItem().toString();
            Quarto selecao = this.listaQuarto.getQuarto(this.listaQuarto.busca(quartoSelecionado));
            if (selecao.checkin()){
                selecao.fazerReserva(user);
                GravarArquivo gravar;
                try {
                    gravar = new GravarArquivo("quartos.txt");
                    gravar.grava(this.listaQuarto.toString());
                    gravar.fecha();
                    this.dispose();
                    new RespostaAtendimento("CheckIn feito com sucesso", this.selectDisponiveis.getSelectedItem().toString(), 
                                this.selectUsuario.getSelectedItem().toString(), valor).setVisible(true);
                } catch (IOException ex) {
                    this.msgErro.setText("Não foi possível salvar");
                    this.msgErro.setVisible(true);
                }
            } else {
                this.msgErro.setText("Quarto precisa ser limpo antes de receber um hospede");
            }
        }
    }//GEN-LAST:event_botaoCheckInActionPerformed

    private void botaoCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCheckOutActionPerformed
        //transforma o conteudo dos dropdown em texto
        String quartoSelecionado = this.selectOcupado.getSelectedItem().toString();
        //busca o quarto a partir do nome escolhido
        Quarto selecao = this.listaQuarto.getQuarto(this.listaQuarto.busca(quartoSelecionado));
        //busca o nome do usuario antes de resetar as informacoes do quarto
        String nomeSel = selecao.getUsuario().getNome();
        //grava o valor a ser pago pelo usuario
        double valor = selecao.checkout();
        
        GravarArquivo gravar;
                try {
                    gravar = new GravarArquivo("quartos.txt");
                    gravar.grava(this.listaQuarto.toString());
                    gravar.fecha();
                    this.dispose();
                    new RespostaAtendimento("Checkout feito com sucesso", this.selectOcupado.getSelectedItem().toString(), 
                                nomeSel, valor).setVisible(true);
                } catch (IOException ex) {
                    this.msgErro.setText("Não foi possível salvar");
                    this.msgErro.setVisible(true);
                }
    }//GEN-LAST:event_botaoCheckOutActionPerformed

    private void botaoReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoReservaActionPerformed
        //transforma o conteudo dos dropdown em texto
        Usuario user = this.listaUsuario.getUsuario(this.selectUsuario.getSelectedItem().toString());
        String quartoSelecionado = this.selectDisponiveis.getSelectedItem().toString();
        //busca o quarto a partir do nome escolhido
        Quarto selecao = this.listaQuarto.getQuarto(this.listaQuarto.busca(quartoSelecionado));
        //associa o quarto ao usuario selecionado, e o retira da lista de idsponiveis
        selecao.fazerReserva(user);
        
        GravarArquivo gravar;
        try {
            gravar = new GravarArquivo("quartos.txt");
            gravar.grava(this.listaQuarto.toString());
            gravar.fecha();
            this.dispose();
            new RespostaAtendimento("Quarto reservado com sucesso", this.selectReservado.getSelectedItem().toString(), 
                                this.selectUsuario.getSelectedItem().toString(), valor).setVisible(true);
        } catch (IOException ex) {
            this.msgErro.setText("Não foi possível salvar");
            this.msgErro.setVisible(true);
        }
    }//GEN-LAST:event_botaoReservaActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private ListaUsuario listaUsuario;
    private ListaQuarto listaQuarto;
    private String[] quartoDisponivel, quartoOcupado, quartoReservado, nomeUsuario;
    private double valor;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCheckIn;
    private javax.swing.JButton botaoCheckOut;
    private javax.swing.JButton botaoReserva;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JCheckBox checkReserva;
    private javax.swing.JLabel labelDisponiveis;
    private javax.swing.JLabel labelOcupados;
    private javax.swing.JLabel labelReservado;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JLabel msgErro;
    private javax.swing.JComboBox<String> selectDisponiveis;
    private javax.swing.JComboBox<String> selectOcupado;
    private javax.swing.JComboBox<String> selectReservado;
    private javax.swing.JComboBox<String> selectUsuario;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
